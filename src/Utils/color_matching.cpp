#include "color_matching.hpp"

float ColorMatching::x_function(unsigned wavelength)
{
    unsigned index { (wavelength - MIN_WAVELENGTH) / COLOR_MATCHING_FCTS_RES };
    return _color_matching_fcts[index].x;
}

float ColorMatching::y_function(unsigned wavelength)
{
    unsigned index { (wavelength - MIN_WAVELENGTH) / COLOR_MATCHING_FCTS_RES };
    return _color_matching_fcts[index].y;
}

float ColorMatching::z_function(unsigned wavelength)
{
    unsigned index { (wavelength - MIN_WAVELENGTH) / COLOR_MATCHING_FCTS_RES };
    return _color_matching_fcts[index].z;
}

Vec3f ColorMatching::from_SPD_to_XYZ(const Spectrum<> *spd, SPD_TYPE type)
{
    Vec3f xyz { 0.0f, 0.0f, 0.0f };
    float luminance { 0.0f };

    if (type == SPD_TYPE::EMISSIVE_SPD)
    {
        for (unsigned i {0}; i < SPECTRAL_SAMPLES; ++i)
        {
            xyz += (*spd)[i]  * _color_matching_fcts[i];
            luminance += _color_matching_fcts[i].y;
        }
    }
    else
    {
        // Reflective or Refractive SPD of a Shape
        // TODO: Convert the SPD to XYZ
    }

    return xyz / luminance;
}

Vec3f ColorMatching::_color_matching_fcts[SPECTRAL_SAMPLES] =
{
    Vec3f(0.00136800f, 3.900e-05f, 0.0064500010f),
    Vec3f(0.00223600f, 6.400e-05f, 0.0105499900f),
    Vec3f(0.00424300f, 0.0001200f, 0.0200500100f),
    Vec3f(0.00765000f, 0.0002170f, 0.0362100000f),
    Vec3f(0.01431000f, 0.0003960f, 0.0678500100f),
    Vec3f(0.02319000f, 0.0006400f, 0.1102000000f),
    Vec3f(0.04351000f, 0.0012100f, 0.2074000000f),
    Vec3f(0.07763000f, 0.0021800f, 0.3713000000f),
    Vec3f(0.13438000f, 0.0040000f, 0.6456000000f),
    Vec3f(0.21477000f, 0.0073000f, 1.0390501000f),
    Vec3f(0.28390000f, 0.0116000f, 1.3856000000f),
    Vec3f(0.32850000f, 0.0168400f, 1.6229600000f),
    Vec3f(0.34828000f, 0.0230000f, 1.7470600000f),
    Vec3f(0.34806000f, 0.0298000f, 1.7826000000f),
    Vec3f(0.33620000f, 0.0380000f, 1.7721100000f),
    Vec3f(0.31870000f, 0.0480000f, 1.7441000000f),
    Vec3f(0.29080000f, 0.0600000f, 1.6692000000f),
    Vec3f(0.25110000f, 0.0739000f, 1.5281000000f),
    Vec3f(0.19536000f, 0.0909800f, 1.2876400000f),
    Vec3f(0.14210000f, 0.1126000f, 1.0419000000f),
    Vec3f(0.09564000f, 0.1390200f, 0.8129501000f),
    Vec3f(0.05795001f, 0.1693000f, 0.6162000000f),
    Vec3f(0.03201000f, 0.2080200f, 0.4651800000f),
    Vec3f(0.01470000f, 0.2586000f, 0.3533000000f),
    Vec3f(0.00490000f, 0.3230000f, 0.2720000000f),
    Vec3f(0.00240000f, 0.4073000f, 0.2123000000f),
    Vec3f(0.00930000f, 0.5030000f, 0.1582000000f),
    Vec3f(0.02910000f, 0.6082000f, 0.1117000000f),
    Vec3f(0.06327000f, 0.7100000f, 0.0782499900f),
    Vec3f(0.10960000f, 0.7932000f, 0.0572500100f),
    Vec3f(0.16550000f, 0.8620000f, 0.0421600000f),
    Vec3f(0.22574990f, 0.9148501f, 0.0298400000f),
    Vec3f(0.29040000f, 0.9540000f, 0.0203000000f),
    Vec3f(0.35970000f, 0.9803000f, 0.0134000000f),
    Vec3f(0.43344990f, 0.9949501f, 0.0087499990f),
    Vec3f(0.51205010f, 1.0000000f, 0.0057499990f),
    Vec3f(0.59450000f, 0.9950000f, 0.0039000000f),
    Vec3f(0.67840000f, 0.9786000f, 0.0027499990f),
    Vec3f(0.76210000f, 0.9520000f, 0.0021000000f),
    Vec3f(0.84250000f, 0.9154000f, 0.0018000000f),
    Vec3f(0.91630000f, 0.8700000f, 0.0016500010f),
    Vec3f(0.97860000f, 0.8163000f, 0.0014000000f),
    Vec3f(1.02630000f, 0.7570000f, 0.0011000000f),
    Vec3f(1.05670000f, 0.6949000f, 0.0010000000f),
    Vec3f(1.06220000f, 0.6310000f, 0.0008000000f),
    Vec3f(1.04560000f, 0.5668000f, 0.0006000000f),
    Vec3f(1.00260000f, 0.5030000f, 0.0003400000f),
    Vec3f(0.93840000f, 0.4412000f, 0.0002400000f),
    Vec3f(0.85444990f, 0.3810000f, 0.0001900000f),
    Vec3f(0.75140000f, 0.3210000f, 1.000000e-04f),
    Vec3f(0.64240000f, 0.2650000f, 4.999999e-05f),
    Vec3f(0.54190000f, 0.2170000f, 3.000000e-05f),
    Vec3f(0.44790000f, 0.1750000f, 2.000000e-05f),
    Vec3f(0.36080000f, 0.1382000f, 1.000000e-05f),
    Vec3f(0.28350000f, 0.1070000f, 0.0000000000f),
    Vec3f(0.21870000f, 0.0816000f, 0.0000000000f),
    Vec3f(0.16490000f, 0.0610000f, 0.0000000000f),
    Vec3f(0.12120000f, 0.0445800f, 0.0000000000f),
    Vec3f(0.08740000f, 0.0320000f, 0.0000000000f),
    Vec3f(0.06360000f, 0.0232000f, 0.0000000000f),
    Vec3f(0.04677000f, 0.0170000f, 0.0000000000f),
    Vec3f(0.03290000f, 0.0119200f, 0.0000000000f),
    Vec3f(0.02270000f, 0.0082100f, 0.0000000000f),
    Vec3f(0.01584000f, 0.0057230f, 0.0000000000f),
    Vec3f(0.01135916f, 0.0041020f, 0.0000000000f),
    Vec3f(0.00811092f, 0.0029290f, 0.0000000000f),
    Vec3f(0.00579035f, 0.0020910f, 0.0000000000f),
    Vec3f(0.00410946f, 0.0014840f, 0.0000000000f),
    Vec3f(0.00289933f, 0.0010470f, 0.0000000000f),
    Vec3f(0.00204919f, 0.0007400f, 0.0000000000f),
    Vec3f(0.00143997f, 0.0005200f, 0.0000000000f),
    Vec3f(0.00099995f, 0.0003611f, 0.0000000000f),
    Vec3f(0.00069008f, 0.0002492f, 0.0000000000f),
    Vec3f(0.00047602f, 0.0001719f, 0.0000000000f),
    Vec3f(0.00033230f, 0.0001200f, 0.0000000000f),
    Vec3f(0.00023483f, 8.480e-05f, 0.0000000000f),
    Vec3f(0.00016615f, 6.000e-05f, 0.0000000000f),
    Vec3f(0.00011741f, 4.240e-05f, 0.0000000000f),
    Vec3f(8.3075e-05f, 3.000e-05f, 0.0000000000f),
    Vec3f(5.8707e-05f, 2.120e-05f, 0.0000000000f),
    Vec3f(4.1510e-05f, 1.499e-05f, 0.0000000000f),
};
